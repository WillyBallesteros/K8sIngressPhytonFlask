###################################
# post_ref003_management  
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: post-ref003-management 
  labels:
    app: post-ref003-management 
spec:
  replicas: 1
  selector:
    matchLabels:
      app: post-ref003-management 
  template:
    metadata:
      labels:
        app: post-ref003-management 
    spec:
      containers:
        - name: post-ref003-management
          image: us-central1-docker.pkg.dev/miso-dann/delivery-miso-grupo-17/post_ref003_management:1.0
          env:
            - name: OFFER_MS
              value: http://offer-management
            - name: ROUTE_MS
              value: http://route-management
            - name: POST_MS
              value: http://post-management
            - name: USER_MS
              value: http://user-management
            - name: SCORE_MS
              value: http://score-management
            - name: "DELIVERY_DATABASE_URI"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: uri
          ports:
            - containerPort: 3005
          # Realizar pull siempre a la imagen
          imagePullPolicy: Always
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: delivery-post-ref003-management-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3005
    type: HTTP
    requestPath: /rf003/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-post-ref003-management
  annotations:
    cloud.google.com/backend-config: '{"default": "delivery-post-ref003-management-config"}'
spec:
  type: NodePort
  selector:
    app: post-ref003-management
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3005
      nodePort: 30105
---
###################################
# offer-rf004-management 
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: offer-rf004-management
  labels:
    app: offer-rf004-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: offer-rf004-management
  template:
    metadata:
      labels:
        app: offer-rf004-management
    spec:
      containers:
        - name: offer-rf004-management
          image: us-central1-docker.pkg.dev/miso-dann/delivery-miso-grupo-17/offer_rf004_management:1.0
          ports:
            - containerPort: 3013
          env:
            - name: OFFER_MS
              value: http://offer-management
            - name: ROUTE_MS
              value: http://route-management
            - name: POST_MS
              value: http://post-management
            - name: USER_MS
              value: http://user-management
            - name: SCORE_MS
              value: http://score-management
            - name: "DELIVERY_DATABASE_URI"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: uri
          # Realizar pull siempre a la imagen
          imagePullPolicy: Always
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: delivery-offer-rf004-management-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3013
    type: HTTP
    requestPath: /rf004/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-offer-rf004-management
  annotations:
    cloud.google.com/backend-config: '{"default": "delivery-offer-rf004-management-config"}'
spec:
  type: NodePort
  selector:
    app: offer-rf004-management
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3013
      nodePort: 30113
---
###################################
# offer-ref005-management 
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: offer-ref005-management
  labels:
    app: offer-ref005-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: offer-ref005-management
  template:
    metadata:
      labels:
        app: offer-ref005-management
    spec:
      containers:
        - name: offer-ref005-management
          image: us-central1-docker.pkg.dev/miso-dann/delivery-miso-grupo-17/post_ref005_management:1.0
          ports:
            - containerPort: 3006
          env:
            - name: OFFER_MS
              value: http://offer-management
            - name: ROUTE_MS
              value: http://route-management
            - name: POST_MS
              value: http://post-management
            - name: USER_MS
              value: http://user-management
            - name: SCORE_MS
              value: http://score-management
            - name: "DELIVERY_DATABASE_URI"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: uri
          # Realizar pull siempre a la imagen
          imagePullPolicy: Always
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: delivery-offer-ref005-management-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3006
    type: HTTP
    requestPath: /rf005/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-offer-ref005-management
  annotations:
    cloud.google.com/backend-config: '{"default": "delivery-offer-ref005-management-config"}'
spec:
  type: NodePort
  selector:
    app: offer-ref005-management
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3006
      nodePort: 30106
---
###################################
# score 
###################################
apiVersion: apps/v1
kind: Deployment
metadata:
  name: score-management
  labels:
    app: score-management
spec:
  replicas: 1
  selector:
    matchLabels:
      app: score-management
  template:
    metadata:
      labels:
        app: score-management
    spec:
      containers:
        - name: score-management
          image: us-central1-docker.pkg.dev/miso-dann/delivery-miso-grupo-17/score:1.0
          ports:
            - containerPort: 3020
          env:
            - name: OFFER_MS
              value: http://offer-management
            - name: ROUTE_MS
              value: http://route-management
            - name: POST_MS
              value: http://post-management
            - name: USER_MS
              value: http://user-management
            - name: SCORE_MS
              value: http://score-management
            - name: "DELIVERY_DATABASE_URI"
              valueFrom:
                secretKeyRef:
                  name: appsecrets
                  key: uri
          # Realizar pull siempre a la imagen
          imagePullPolicy: Always
---
apiVersion: cloud.google.com/v1
kind: BackendConfig
metadata:
  name: delivery-score-management-config
spec:
  healthCheck:
    checkIntervalSec: 30
    port: 3020
    type: HTTP
    requestPath: /score/ping
---
kind: Service
apiVersion: v1
metadata:
  name: servicio-score-management
  annotations:
    cloud.google.com/backend-config: '{"default": "delivery-score-management-config"}'
spec:
  type: NodePort
  selector:
    app: score-management
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3020
      nodePort: 30120